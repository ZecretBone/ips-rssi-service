// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: ips/rssi/v1/stat.proto

package rssiv1

import (
	v1 "github.com/ZecretBone/ips-rssi-service/internal/gen/proto/ips/shared/rssi/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CollectDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signals     []*v1.RSSI             `protobuf:"bytes,1,rep,name=signals,proto3" json:"signals,omitempty"`
	DeviceInfo  *v1.DeviceInfo         `protobuf:"bytes,2,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	Position    *v1.Position           `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Duration    int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	PollingRate int32                  `protobuf:"varint,5,opt,name=polling_rate,json=pollingRate,proto3" json:"polling_rate,omitempty"`
	Stage       v1.StatCollectionStage `protobuf:"varint,6,opt,name=stage,proto3,enum=ips.shared.rssi.v1.StatCollectionStage" json:"stage,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *CollectDataRequest) Reset() {
	*x = CollectDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_rssi_v1_stat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectDataRequest) ProtoMessage() {}

func (x *CollectDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ips_rssi_v1_stat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectDataRequest.ProtoReflect.Descriptor instead.
func (*CollectDataRequest) Descriptor() ([]byte, []int) {
	return file_ips_rssi_v1_stat_proto_rawDescGZIP(), []int{0}
}

func (x *CollectDataRequest) GetSignals() []*v1.RSSI {
	if x != nil {
		return x.Signals
	}
	return nil
}

func (x *CollectDataRequest) GetDeviceInfo() *v1.DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *CollectDataRequest) GetPosition() *v1.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CollectDataRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CollectDataRequest) GetPollingRate() int32 {
	if x != nil {
		return x.PollingRate
	}
	return 0
}

func (x *CollectDataRequest) GetStage() v1.StatCollectionStage {
	if x != nil {
		return x.Stage
	}
	return v1.StatCollectionStage(0)
}

func (x *CollectDataRequest) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *CollectDataRequest) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *CollectDataRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CollectDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CollectDataResponse) Reset() {
	*x = CollectDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_rssi_v1_stat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectDataResponse) ProtoMessage() {}

func (x *CollectDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ips_rssi_v1_stat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectDataResponse.ProtoReflect.Descriptor instead.
func (*CollectDataResponse) Descriptor() ([]byte, []int) {
	return file_ips_rssi_v1_stat_proto_rawDescGZIP(), []int{1}
}

var File_ips_rssi_v1_stat_proto protoreflect.FileDescriptor

var file_ips_rssi_v1_stat_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x70, 0x73, 0x2f, 0x72, 0x73, 0x73, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x70, 0x73, 0x2e, 0x72, 0x73,
	0x73, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x69, 0x70, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x72, 0x73, 0x73, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x73, 0x73, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x69, 0x70, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2f, 0x72, 0x73, 0x73, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x03, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69,
	0x70, 0x73, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x72, 0x73, 0x73, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x53, 0x53, 0x49, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12,
	0x3f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x72, 0x73, 0x73, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x72, 0x73, 0x73, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x72, 0x73, 0x73, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x69, 0x0a, 0x15,
	0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x72, 0x73, 0x73, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x72, 0x73, 0x73, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb8, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e,
	0x69, 0x70, 0x73, 0x2e, 0x72, 0x73, 0x73, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x53, 0x74, 0x61,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x5a, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x65, 0x2f,
	0x69, 0x70, 0x73, 0x2d, 0x72, 0x73, 0x73, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x70, 0x73, 0x2f, 0x72, 0x73, 0x73, 0x69, 0x2f, 0x76, 0x31, 0x3b,
	0x72, 0x73, 0x73, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49, 0x52, 0x58, 0xaa, 0x02, 0x0b, 0x49,
	0x70, 0x73, 0x2e, 0x52, 0x73, 0x73, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x49, 0x70, 0x73,
	0x5c, 0x52, 0x73, 0x73, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x49, 0x70, 0x73, 0x5c, 0x52,
	0x73, 0x73, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0d, 0x49, 0x70, 0x73, 0x3a, 0x3a, 0x52, 0x73, 0x73, 0x69, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ips_rssi_v1_stat_proto_rawDescOnce sync.Once
	file_ips_rssi_v1_stat_proto_rawDescData = file_ips_rssi_v1_stat_proto_rawDesc
)

func file_ips_rssi_v1_stat_proto_rawDescGZIP() []byte {
	file_ips_rssi_v1_stat_proto_rawDescOnce.Do(func() {
		file_ips_rssi_v1_stat_proto_rawDescData = protoimpl.X.CompressGZIP(file_ips_rssi_v1_stat_proto_rawDescData)
	})
	return file_ips_rssi_v1_stat_proto_rawDescData
}

var file_ips_rssi_v1_stat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ips_rssi_v1_stat_proto_goTypes = []interface{}{
	(*CollectDataRequest)(nil),    // 0: ips.rssi.v1.CollectDataRequest
	(*CollectDataResponse)(nil),   // 1: ips.rssi.v1.CollectDataResponse
	(*v1.RSSI)(nil),               // 2: ips.shared.rssi.v1.RSSI
	(*v1.DeviceInfo)(nil),         // 3: ips.shared.rssi.v1.DeviceInfo
	(*v1.Position)(nil),           // 4: ips.shared.rssi.v1.Position
	(v1.StatCollectionStage)(0),   // 5: ips.shared.rssi.v1.StatCollectionStage
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_ips_rssi_v1_stat_proto_depIdxs = []int32{
	2, // 0: ips.rssi.v1.CollectDataRequest.signals:type_name -> ips.shared.rssi.v1.RSSI
	3, // 1: ips.rssi.v1.CollectDataRequest.device_info:type_name -> ips.shared.rssi.v1.DeviceInfo
	4, // 2: ips.rssi.v1.CollectDataRequest.position:type_name -> ips.shared.rssi.v1.Position
	5, // 3: ips.rssi.v1.CollectDataRequest.stage:type_name -> ips.shared.rssi.v1.StatCollectionStage
	6, // 4: ips.rssi.v1.CollectDataRequest.started_at:type_name -> google.protobuf.Timestamp
	6, // 5: ips.rssi.v1.CollectDataRequest.ended_at:type_name -> google.protobuf.Timestamp
	6, // 6: ips.rssi.v1.CollectDataRequest.created_at:type_name -> google.protobuf.Timestamp
	0, // 7: ips.rssi.v1.StatCollectionService.CollectData:input_type -> ips.rssi.v1.CollectDataRequest
	1, // 8: ips.rssi.v1.StatCollectionService.CollectData:output_type -> ips.rssi.v1.CollectDataResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_ips_rssi_v1_stat_proto_init() }
func file_ips_rssi_v1_stat_proto_init() {
	if File_ips_rssi_v1_stat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ips_rssi_v1_stat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_rssi_v1_stat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ips_rssi_v1_stat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ips_rssi_v1_stat_proto_goTypes,
		DependencyIndexes: file_ips_rssi_v1_stat_proto_depIdxs,
		MessageInfos:      file_ips_rssi_v1_stat_proto_msgTypes,
	}.Build()
	File_ips_rssi_v1_stat_proto = out.File
	file_ips_rssi_v1_stat_proto_rawDesc = nil
	file_ips_rssi_v1_stat_proto_goTypes = nil
	file_ips_rssi_v1_stat_proto_depIdxs = nil
}
